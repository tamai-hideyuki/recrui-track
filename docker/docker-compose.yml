services:
  frontend:
    build:
      context: ../apps/frontend
      dockerfile: ../../docker/frontend.Dockerfile
      target: runner
    container_name: "${FRONTEND_CONTAINER}"
    image: "${FRONTEND_CONTAINER}:${FRONTEND_IMAGE_TAG}"
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NODE_ENV=${NODE_ENV}
      - PORT=${FRONTEND_PORT}
    expose:
      - "${FRONTEND_PORT}"

  backend:
    build:
      context: ../apps/backend
      dockerfile: ../../docker/backend.Dockerfile
      target: runner
    container_name: "${BACKEND_CONTAINER}"
    image: "${BACKEND_CONTAINER}:${BACKEND_IMAGE_TAG}"
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${BACKEND_PORT}
    expose:
      - "${BACKEND_PORT}"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ../apps/backend/recrui-track.db:/app/recrui-track.db

  nginx:
    image: nginx:stable-alpine
    container_name: "${NGINX_CONTAINER}"
    restart: unless-stopped
    ports:
      - "${NGINX_HOST_PORT}:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
